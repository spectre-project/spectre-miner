name: Build and upload assets
on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, ubuntu-latest, windows-latest, macos-latest]
    name: Building on ${{ matrix.os }}
    steps:

      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install toolchain
        id: rust-toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install protoc
        uses: taiki-e/install-action@v2
        with:
          tool: protoc

      - name: Create bin directory
        run: mkdir bin

      - name: Build on Linux GNU
        if: matrix.os == 'ubuntu-20.04'
        run: |
          cargo build --target=x86_64-unknown-linux-gnu --release
          archive="bin/spectre-miner-${{ github.event.release.tag_name }}-linux-gnu-amd64.zip"
          asset_name="spectre-miner-${{ github.event.release.tag_name }}-linux-gnu-amd64"
          strip ./target/x86_64-unknown-linux-gnu/release/spectre-miner
          mv ./target/x86_64-unknown-linux-gnu/release/spectre-miner ./bin/${asset_name}
          zip -r "${archive}" ./bin/${asset_name}

          # HiveOS.
          hiveos_asset_name="spectre-miner-${{ github.event.release.tag_name }}_hiveos"
          hiveos_archive="bin/${hiveos_asset_name}.tar.gz"
          cp -r ./integrations/hive-os ./bin/spectre-miner
          cp ./bin/${asset_name} ./bin/spectre-miner/spectre-miner
          sed 's/^ver="custom"/ver="${{ github.event.release.tag_name }}"/g' -i ./bin/spectre-miner/h-stats.sh
          tar -czvf "${hiveos_archive}" -C ./bin spectre-miner
          rm -r ./bin/spectre-miner

          # mmpOS.
          mmpos_asset_name="spectre-miner-${{ github.event.release.tag_name }}_mmpos"
          mmpos_archive="bin/${mmpos_asset_name}.tar.gz"
          cp -r ./integrations/mmpos ./bin/spectre-miner
          cp ./bin/${asset_name} ./bin/spectre-miner/spectre-miner
          sed 's/^ver="custom"/ver="${{ github.event.release.tag_name }}"/g' -i ./bin/spectre-miner/mmp-external.conf
          tar -czvf "${mmpos_archive}" -C ./bin spectre-miner
          rm -r ./bin/spectre-miner

          # Cleanup.
          rm ./bin/${asset_name}

      - name: Build on Linux musl
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install -y musl-tools
          rustup target add x86_64-unknown-linux-musl
          cargo build --target=x86_64-unknown-linux-musl --release
          archive="bin/spectre-miner-${{ github.event.release.tag_name }}-linux-musl-amd64.zip"
          asset_name="spectre-miner-${{ github.event.release.tag_name }}-linux-musl-amd64"
          strip ./target/x86_64-unknown-linux-musl/release/spectre-miner
          mv ./target/x86_64-unknown-linux-musl/release/spectre-miner ./bin/${asset_name}
          zip -r "${archive}" ./bin/${asset_name}
          rm ./bin/${asset_name}

      - name: Build on Windows
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |
          cargo build --target=x86_64-pc-windows-msvc --release
          archive="bin/spectre-miner-${{ github.event.release.tag_name }}-win64-amd64.zip"
          asset_name="spectre-miner-${{ github.event.release.tag_name }}-win64-amd64.exe"
          mv ./target/x86_64-pc-windows-msvc/release/spectre-miner.exe ./bin/${asset_name}
          7z a -tzip -r "${archive}" bin/${asset_name}
          rm ./bin/${asset_name}

      - name: Build on MacOS for x86_64
        if: matrix.os == 'macos-latest'
        run: |
          rustup target add x86_64-apple-darwin
          cargo build --target=x86_64-apple-darwin --release
          archive="bin/spectre-miner-${{ github.event.release.tag_name }}-osx-amd64.zip"
          asset_name="spectre-miner-${{ github.event.release.tag_name }}-osx-amd64"
          mv ./target/x86_64-apple-darwin/release/spectre-miner ./bin/${asset_name}
          zip -r "${archive}" ./bin/${asset_name}
          rm ./bin/${asset_name}

      - name: Build on MacOS for M1/2
        if: matrix.os == 'macos-latest'
        run: |
          cargo build --target=aarch64-apple-darwin --release
          archive="bin/spectre-miner-${{ github.event.release.tag_name }}-osx-aarch64.zip"
          asset_name="spectre-miner-${{ github.event.release.tag_name }}-osx-aarch64"
          mv ./target/aarch64-apple-darwin/release/spectre-miner ./bin/${asset_name}
          zip -r "${archive}" ./bin/${asset_name}
          rm ./bin/${asset_name}

      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          files: |
            bin/*.zip
            bin/*.tar.gz
